.\"	$Id$
.\"
.\" Copyright (c) 2020 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt ORT_DIFF 3
.Os
.Sh NAME
.Nm ort_diff
.Nd compute ort configuration differences
.Sh LIBRARY
.Lb libort
.Sh SYNOPSIS
.In sys/queue.h
.In stdio.h
.In ort.h
.Ft "struct diffq *"
.Fo ort_diff
.Fa "const struct config *from"
.Fa "const struct config *into"
.Fc
.Sh DESCRIPTION
Computes the differences from the old
.Xr ort 5
configuration
.Fa from
and the new
.Fa into .
.Em \&It does not return all differences yet: it's a work in progress.
.Pp
The differences are returned as a queue of structures that indicate
whether any configuration component has changed, has not changed, has
been added, or has been removed.
.Pp
The result should be freed by
.Xr ort_diff_free 3
after use.
.Pp
Both
.Fa from
and
.Fa into
must be fully linked as driven by
.Xr ort_parse_close 3 .
.Pp
The differences are typed according to
.Vt "enum difftype" ,
which may be any of the following:
.Bl -tag -width Ds -offset indent
.It Dv DIFF_ADD_BITF
A
.Vt "struct bitf"
was added to
.Fa into .
.It Dv DIFF_ADD_BITIDX
A
.Vt "struct bitidx"
was added to
.Fa into .
.It Dv DIFF_ADD_EITEM
A
.Vt "struct eitem"
was added to
.Fa into .
.It Dv DIFF_ADD_ENM
A
.Vt "struct enm"
was added to
.Fa into .
.It Dv DIFF_ADD_FIELD
A
.Vt "struct field"
was added to
.Fa into .
.It Dv DIFF_ADD_INSERT
A
.Vt "struct insert"
was added to
.Fa into .
.It Dv DIFF_ADD_ROLE
A
.Vt "struct role"
was added to
.Fa into .
.It Dv DIFF_ADD_ROLES
Roles were added to
.Fa into .
.It Dv DIFF_ADD_STRCT
A
.Vt "struct strct"
was added to
.Fa into .
.It Dv DIFF_ADD_UNIQUE
A
.Vt "struct unique"
was added to
.Fa into .
.It Dv DIFF_DEL_BITF
A
.Vt "struct bitf"
was removed from
.Fa from .
.It Dv DIFF_DEL_BITIDX
A
.Vt "struct bitidx"
was removed from
.Fa from .
.It Dv DIFF_DEL_EITEM
A
.Vt "struct eitem"
was removed from
.Fa from .
.It Dv DIFF_DEL_ENM
A
.Vt "struct enm"
was removed from
.Fa from .
.It Dv DIFF_DEL_FIELD
A
.Vt "struct field"
was removed from
.Fa from .
.It Dv DIFF_DEL_INSERT
A
.Vt "struct insert"
was removed from
.Fa from .
.It Dv DIFF_DEL_ROLE
A
.Vt "struct role"
was removed from
.Fa from .
.It Dv DIFF_DEL_ROLES
All roles were removed from
.Fa from .
.It Dv DIFF_DEL_STRCT
A
.Vt "struct strct"
was removed from
.Fa from .
.It Dv DIFF_DEL_UNIQUE
A
.Vt "struct unique"
was removed from
.Fa from .
.It Dv DIFF_MOD_BITF
A
.Vt "struct bitf"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_MOD_BITF_COMMENT ,
.Dv DIFF_MOD_BITF_LABELS ,
.Dv DIFF_ADD_BITIDX ,
.Dv DIFF_DEL_BITIDX ,
or
.Dv DIFF_MOD_BITIDX
will also be set for the given object.
.It Dv DIFF_MOD_BITF_COMMENT
The
.Va doc
field of a
.Vt "struct bitf"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_BITF_LABELS
The
.Va labels_null
or
.Va labels_unset
field of a
.Vt "struct bitf"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_BITIDX
A
.Vt "struct bitidx"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_MOD_BITIDX_COMMENT ,
.Dv DIFF_MOD_BITIDX_LABELS ,
or
.Dv DIFF_MOD_BITIDX_VALUE
will also be set for the given object.
.It Dv DIFF_MOD_BITIDX_COMMENT
The
.Va doc
field of a
.Vt "struct bitidx"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_BITIDX_LABELS
The
.Va labels
field of a
.Vt "struct bitidx"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_BITIDX_VALUE
The
.Va value
field of a
.Vt "struct bitidx"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_EITEM
A
.Vt "struct eitem"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_MOD_EITEM_COMMENT ,
.Dv DIFF_MOD_EITEM_LABELS ,
or
.Dv DIFF_MOD_EITEM_VALUE
will also be set for the given object.
.It Dv DIFF_MOD_EITEM_COMMENT
The
.Va doc
field of a
.Vt "struct eitem"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_EITEM_LABELS
The
.Va labels
field of a
.Vt "struct eitem"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_EITEM_VALUE
The
.Va value
field of a
.Vt "struct eitem"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_ENM
A
.Vt "struct enm"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_MOD_ENM_COMMENT ,
.Dv DIFF_MOD_ENM_LABELS ,
.Dv DIFF_ADD_EITEM ,
.Dv DIFF_DEL_EITEM ,
or
.Dv DIFF_MOD_EITEM
will also be set for the given object.
.It Dv DIFF_MOD_ENM_COMMENT
The
.Va doc
field of a
.Vt "struct enm"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_ENM_LABELS
The
.Va labels_null
field of a
.Vt "struct enm"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_FIELD
A
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_MOD_FIELD_ACTIONS ,
.Dv DIFF_MOD_FIELD_BITF ,
.Dv DIFF_MOD_FIELD_COMMENT ,
.Dv DIFF_MOD_FIELD_DEF ,
.Dv DIFF_MOD_FIELD_ENM ,
.Dv DIFF_MOD_FIELD_FLAGS ,
.Dv DIFF_MOD_FIELD_REFERENCE ,
.Dv DIFF_MOD_FIELD_TYPE ,
or
.Dv DIFF_MOD_FIELD_VALIDS
will also be set for the given object.
.It Dv DIFF_MOD_FIELD_ACTIONS
The
.Va actup
or
.Va actdel
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_FIELD_BITF
The
.Va bitf
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
This is only for a change: if the type is newly or no longer a
bit-field, this is not raised.
.It Dv DIFF_MOD_FIELD_COMMENT
The
.Va doc
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_FIELD_DEF
The
.Va def
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
This is only for a change: if the type changes, or if a default is newly
or no longer defined, this is not raised.
.It Dv DIFF_MOD_FIELD_ENM
The
.Va enm
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
This is only for a change: if the type is newly or no longer a
enumeration, this is not raised.
.It Dv DIFF_MOD_FIELD_FLAGS
The
.Va flags
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_FIELD_REFERENCE
The
.Va ref
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
There are three reasons this might occur: gaining or losing reference status,
source of a local reference changing, target of a local or remote reference
changing.
.It Dv DIFF_MOD_FIELD_TYPE
The
.Va type
field of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_FIELD_VALIDS
The
.Va fvq
queue of a
.Vt "struct field"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_INSERT
A
.Vt "struct insert"
changed between
.Fa from
and
.Fa into .
This stipulates that
.Dv DIFF_MOD_INSERT_ROLEMAP
will also be set for the given object.
.It Dv DIFF_MOD_INSERT_ROLEMAP
One or more roles in the
.Va rolemap
queue of a
.Vt "struct insert"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_ROLE
A
.Vt "struct role"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_MOD_ROLE_CHILDREN ,
.Dv DIFF_MOD_ROLE_COMMENT ,
or
.Dv DIFF_MOD_ROLE_PARENT
will also be set for the given object.
.It Dv DIFF_MOD_ROLE_CHILDREN
One or more roles in the
.Va subrq
field of a
.Vt "struct role"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_ROLE_COMMENT
The
.Va doc
field of a
.Vt "struct role"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_ROLE_PARENT
The
.Va parent
field of a
.Vt "struct role"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_MOD_ROLES
A
.Vt "struct role"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_ADD_ROLE ,
.Dv DIFF_DEL_ROLE ,
or
.Dv DIFF_MOD_ROLE
will also be set for the given object.
.It Dv DIFF_MOD_STRCT
A
.Vt "struct strct"
changed between
.Fa from
and
.Fa into .
This stipulates that one or more of
.Dv DIFF_ADD_FIELD ,
.Dv DIFF_ADD_INSERT ,
.Dv DIFF_ADD_UNIQUE ,
.Dv DIFF_DEL_FIELD ,
.Dv DIFF_DEL_INSERT ,
.Dv DIFF_DEL_UNIQUE ,
.Dv DIFF_MOD_FIELD ,
.Dv DIFF_MOD_INSERT ,
or
.Dv DIFF_MOD_STRCT_COMMENT ,
will also be set for the given object.
.It Dv DIFF_MOD_STRCT_COMMENT
The
.Va doc
field of a
.Vt "struct strct"
changed between
.Fa from
and
.Fa into .
.It Dv DIFF_SAME_BITF
The
.Vt "struct bitf"
did not change.
.It Dv DIFF_SAME_BITIDX
The
.Vt "struct bitidx"
did not change.
.It Dv DIFF_SAME_EITEM
The
.Vt "struct eitem"
did not change.
.It Dv DIFF_SAME_ENM
The
.Vt "struct enm"
did not change.
.It Dv DIFF_SAME_FIELD
The
.Vt "struct field"
did not change.
.It Dv DIFF_SAME_ROLES
Roles were specified in both
.Fa from
and
.Fa into
and they did not change.
.It Dv DIFF_SAME_ROLE
The
.Vt "struct role"
did not change.
.It Dv DIFF_SAME_STRCT
The
.Vt "struct strct"
did not change.
.El
.Pp
The returned structure is a queue of
.Vt struct diff ,
which consists of the following:
.Bl -tag -width Ds -offset indent
.It Va "enum difftype type"
The type of change (or non-change).
This affects which of the following union fields will be set.
.It Va "<anon union>"
This is a union consisting of the following:
.Bl -tag -width Ds
.It Va "const struct bitf *bitf"
Set by
.Dv DIFF_ADD_BITF
and
.Dv DIFF_DEL_BITF .
.It Va "struct diff_bitf bitf_pair"
Set by
.Dv DIFF_MOD_BITF ,
.Dv DIFF_MOD_BITF_COMMENT ,
.Dv DIFF_MOD_BITF_LABELS ,
and
.Dv DIFF_SAME_BITF .
.It Va "const struct bitidx *bitidx"
Set by
.Dv DIFF_ADD_BITIDX
and
.Dv DIFF_DEL_BITIDX .
.It Va "struct diff_bitidx bitidx_pair"
Set by
.Dv DIFF_MOD_BITIDX ,
.Dv DIFF_MOD_BITIDX_COMMENT ,
.Dv DIFF_MOD_BITIDX_LABELS ,
.Dv DIFF_MOD_BITIDX_VALUE ,
and
.Dv DIFF_SAME_BITIDX .
.It Va "const struct enm *enm"
Set by
.Dv DIFF_ADD_ENM
and
.Dv DIFF_DEL_ENM .
.It Va "struct diff_enm enm_pair"
Set by
.Dv DIFF_MOD_ENM ,
.Dv DIFF_MOD_ENM_COMMENT ,
.Dv DIFF_MOD_ENM_LABELS ,
and
.Dv DIFF_SAME_ENM .
.It Va "const struct eitem *eitem"
Set by
.Dv DIFF_ADD_EITEM
and
.Dv DIFF_DEL_EITEM .
.It Va "struct diff_eitem eitem_pair"
Set by
.Dv DIFF_MOD_EITEM ,
.Dv DIFF_MOD_EITEM_COMMENT ,
.Dv DIFF_MOD_EITEM_LABELS ,
.Dv DIFF_MOD_EITEM_VALUE ,
and
.Dv DIFF_SAME_EITEM .
.It Va "const struct field *field"
Set by
.Dv DIFF_ADD_FIELD
and
.Dv DIFF_DEL_FIELD .
.It Va "struct diff_field field_pair"
Set by
.Dv DIFF_MOD_FIELD ,
.Dv DIFF_MOD_FIELD_ACTIONS ,
.Dv DIFF_MOD_FIELD_BITF ,
.Dv DIFF_MOD_FIELD_COMMENT ,
.Dv DIFF_MOD_FIELD_DEF ,
.Dv DIFF_MOD_FIELD_ENM ,
.Dv DIFF_MOD_FIELD_FLAGS ,
.Dv DIFF_MOD_FIELD_REFERENCE ,
.Dv DIFF_MOD_FIELD_TYPE ,
.Dv DIFF_MOD_FIELD_VALIDS ,
and
.Dv DIFF_SAME_FIELD .
.It Va "const struct role *role"
Set by
.Dv DIFF_ADD_ROLE
and
.Dv DIFF_DEL_ROLE .
Also used by
.Dv DIFF_ADD_ROLES
and
.Dv DIFF_DEL_ROLES ,
where
.Va role
is the first of the new or deleted roles.
.It Va "struct diff_role role_pair"
Set by
.Dv DIFF_MOD_ROLES
and
.Dv DIFF_SAME_ROLES ,
where
.Va into
and
.Va from
are set to the first of the modified or same roles.
Also set by
.Dv DIFF_MOD_ROLE_CHILDREN ,
.Dv DIFF_MOD_ROLE_COMMENT ,
.Dv DIFF_MOD_ROLE_PARENT ,
and
.Dv DIFF_SAME_ROLE .
.It Va "const struct strct *strct"
Set by
.Dv DIFF_ADD_INSERT ,
.Dv DIFF_ADD_STRCT ,
.Dv DIFF_DEL_INSERT .
and
.Dv DIFF_DEL_STRCT .
.It Va "struct diff_strct strct_pair"
Set by
.Dv DIFF_MOD_INSERT ,
.Dv DIFF_MOD_INSERT_ROLEMAP ,
.Dv DIFF_MOD_STRCT ,
.Dv DIFF_MOD_STRCT_COMMENT ,
.Dv DIFF_SAME_INSERT ,
and
.Dv DIFF_SAME_FIELD .
.It Va "const struct unique *unique"
Set by
.Dv DIFF_ADD_UNIQUE
and
.Dv DIFF_DEL_UNIQUE .
.El
.El
.Pp
A configuration that has not changed at all will consists solely of
.Dv DIFF_SAME_xxxx
entries.
.\" The following requests should be uncommented and used where appropriate.
.\" .Sh CONTEXT
.\" For section 9 functions only.
.Sh RETURN VALUES
Returns the queue of differences or
.Dv NULL
on memory allocation failure.
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" The following parses standard input and repeats the parsed, canonicalised
.\" configuration on standard output.
.\" .Bd -literal -offset indent
.\" struct config *cfg;
.\"
.\" if ((cfg = ort_config_alloc()) == NULL)
.\" 	err(1, NULL);
.\" if (!ort_parse_file(cfg, stdin, "<stdin>");
.\" 	errx(1, "ort_parse_file");
.\" if (!ort_parse_close(cfg))
.\" 	errx(1, "ort_parse_close");
.\" if (!ort_write_file(stdout, cfg))
.\" 	errx(1, "ort_write_file");
.\"
.\" ort_config_free(cfg);
.\" .Ed
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.\" .Sh SEE ALSO
.\" .Xr foobar 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
