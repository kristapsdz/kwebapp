.\"	$Id$
.\"
.\" Copyright (c) 2020 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt ORT_LANG_XLIFF_EXTRACT 3
.Os
.Sh NAME
.Nm ort_lang_xliff_extract
.Nd extract translatable strings from ort configuration
.Sh LIBRARY
.Lb libort-lang-xliff
.Sh SYNOPSIS
.In sys/queue.h
.In stdio.h
.In ort.h
.In ort-lang-xliff.h
.Ft int
.Fo ort_lang_xliff_extract
.Fa "const struct ort_lang_xliff *args"
.Fa "struct config *cfg"
.Fa "FILE *f"
.Fc
.Sh DESCRIPTION
Outputs an XLIFF 1.2 file to
.Fa f
consisting of translatable labels in
.Fa cfg
with the parameters in
.Fa args .
The arguments recgnised in
.Fa args
are as follows:
.Bl -tag -width Ds -offset indent
.It Va unsigned int flags
If the
.Dv ORT_LANG_XLIFF_COPY
mask is set, the translation emits both
.Li <source>
and
.Li <target>
directives, otherwise it emits only
.Li <source> .
.El
.Pp
Only translatable components (e.g,. an enumeration item) with labels are
queued for translation.
.Nm
may alter
.Fa cfg
by adding warning messages for translatable components that do not have an
initial label.
These warnings are informational.
.Pp
Generated content conforms to the strict XLIFF 1.2 schema.
.\" The following requests should be uncommented and used where appropriate.
.\" .Sh CONTEXT
.\" For section 9 functions only.
.Sh RETURN VALUES
Returns zero on failure, non-zero on success.
Failure occurs with memory exhaustion or failure to write to
.Fa f .
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.Sh EXAMPLES
A simple scenario of creating a configuration, parsing standard input,
linking, then extracting translations is as follows.
.Bd -literal -offset indent
struct config *cfg;
struct ort_lang_xliff args;

memset(&args, 0, sizeof(struct ort_lang_xliff));

if ((cfg = ort_config_alloc()) == NULL)
  err(1, NULL);

if (ort_parse_file(cfg, stdin, "<stdin>") &&
    ort_parse_close(cfg))
  ort_lang_xliff_extract(&args, cfg, stdout);

ort_write_msg_file(stderr, &cfg.mq);
ort_config_free(cfg);
.Ed
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr ort 3
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
