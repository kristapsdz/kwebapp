.\"	$OpenBSD$
.\"
.\" Copyright (c) 2018 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt ORT-AUDIT-JSON 1
.Os
.Sh NAME
.Nm ort-audit-json
.Nd audit ort role access as JSON
.Sh SYNOPSIS
.Nm ort-audit-json
.Op Fl s
.Op Fl r Ar role
.Op Ar config...
.Sh DESCRIPTION
Accepts
.Xr ort 5
.Ar config
files, defaulting to standard input,
and generates a JSON or JavaScript audit report on standard output.
Its arguments are as follows:
.Bl -tag -width Ds
.It Fl s
Emit a full JavaScript document instead of just a JSON object.
.It Fl r Ar role
Audit the named
.Ar role .
.El
.Pp
By default, the
.Ar all
role is audited.
The audit consists of all operations and reachable structures and fields
along with documentation and other information germane to the audit
target.
.Pp
Output is formatted in JSON or as a JavaScript document.
In the default JSON case, the output conforms to the following:
.Bd -literal -offset indent
interface auditAccessFrom {
  function: string;
  exporting: boolean;
  path: string;
}

interface auditAccess {
  exportable: boolean;
  data: string[];
  accessfrom: auditAccessFrom[];
  insert: string|null;
  delete: string[];
  update: string[];
  count: string[];
  get: string[];
  iterate: string[];
  list: string[];
}

interface auditFunction{
  doc: string|null;
  type: 'insert'|'delete'|...;
}

interface auditFunctionSet {
  [name: string]: auditFunction;
}

interface auditField {
  export: boolean;
  doc: string|null;
}

interface auditFieldSet {
  [name: string]: auditField;
}

export interface audit {
  role: string;
  doc: string|null;
  access: auditAccess[];
  functions: auditFunctionSet;
  fields: auditFieldSet;
}
.Ed
.Pp
The root object is a
.Qq audit
object.
If the
.Fl s
flag is given, the
.Qq audit
object is wrapped as follows:
.Bd -literal -offset indent
(function(root) {
 'use strict';
 var audit = { /* Contents of audit object. */ };
});
.Ed
.\" The following requests should be uncommented and used where appropriate.
.\" .Sh CONTEXT
.\" For section 9 functions only.
.\" .Sh RETURN VALUES
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.Sh FILES
The
.Pa audit.css ,
.Pa audit.html ,
and
.Pa audit.js
files, all installed into the share directory, provide an example
implementation of a web-based front-end.
By putting these into a single directory along with
.Pa audit-out.js ,
consisting of the output of
.Nm
with
.Fl s ,
a browser may be used to audit a role's access.
.Sh EXIT STATUS
.Ex -std
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr ort 5
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
