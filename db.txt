struct company {
  field name text limit gt 0 comment
    "Name of the organisation.";
  field id int rowid;
  field somenum int null comment
    "Simply a check for null values.";
  list somenum isnull;
  comment "Controlling organisation.";
};

struct user {
  field company struct cid:company.id comment
    "This struct will be filled in from an inner join
    on the \"cid\" variable.";
  field cid int comment 
    "A foreign key reference.";
  field hash password limit gt 0 comment
    "Password hash.
    This is passed to inserts and updates as a password,
    then hashed within the implementation and extracted
    (in listings and searches) as the hash value.";
  field email text limit gt 0 unique comment
    "Unique e-mail address.";
  field image blob null comment 
    "A PNG image or something.";
  field name text comment 
    "User's full name.";
  field uid int rowid;
  iterate name: comment
    "Create a function that searches for users by a given
    name; and, when found, invokes a callback function
    provided the user structure.";
  search email,hash: name creds comment
    "Search for a unique user with their e-mail and
    password.
    This is a quick way to verify that a user has entered
    the correct password for logging in.";
  search uid: comment "Lookup by unique identifier.";
  update hash: uid;
  update email: uid;
  comment "A regular user.";
};

struct session { 
  field user struct userid:user.uid;
  field userid int comment "Associated user.";
  field token int comment "Random cookie.";
  field mtime int;
  field id int rowid;
  iterate user.company.name,mtime: name foo comment 
    "Search for company's logged-in users.";
  comment "Authenticated session.";
  delete id;
};
