<?xml version="1.0" encoding="UTF-8" ?>
<articles>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.9</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-19">2017-05-19</time>
		</header>
		<aside>
			<p>
				Introduce <b>-J</b>, which generates JavaScript output.
				This completes the chain from HTML form input to filling in HTML DOM trees with CGI script output.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.8</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-18">2017-05-18</time>
		</header>
		<aside>
			<p>
				Handle empty insertions by using <code>DEFAULT VALUES</code> on the insertion.
				Accept inequality operators for search, update, and delete constraints.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.7</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-15">2017-05-15</time>
		</header>
		<aside>
			<p>
				Add limit clauses to make validation more meaningful.
				(See the <b>limit</b> field clause in <a href="kwebapp.5.html">kwebapp(5)</a>.)
				Now input values can be limited.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.6</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-13">2017-05-13</time>
		</header>
		<aside>
			<p>
				Add full validation sequence required by <a href="https://kristaps.bsd.lv/kcgi">kcgi(3)</a>, specifically
				<code>khttp_parse(3)</code>.
				With this in place, applications can push the given structure directly into the HTTP parser without needing to
				create the array themselves.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.5</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-12">2017-05-12</time>
		</header>
		<aside>
			<p>
				Add field validation routines.
				See the <b>-v</b> flag in <a href="kwebapp.1.html">kwebapp(1)</a>.
				This uses the field type (and modifiers) to create 
				<a href="https://kristaps.bsd.lv/kcgi">kcgi(3)</a> validation routines.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.4</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-05">2017-05-05</time>
		</header>
		<aside>
			<p>
				Require a semicolon after <q>struct</q> statements.
				This is future-proofing for options following the <q>struct</q> data.
				Also added a <q>noexport</q> field option that disallows fields from being JSON-exported.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.3</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-04">2017-05-04</time>
		</header>
		<aside>
			<p>
				Handle empty (<q>null</q>) values as specified in the configuration when exporting to JSON.
				Also, properly handle blob values as base64-encoded strings.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.2</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-05-02">2017-05-02</time>
		</header>
		<aside>
			<p>
				Introduce <b>-j</b>, which also emits JSON output functions using <a
					href="https://kristaps.bsd.lv/kcgi">kcgi(3)</a>'s interface.
				These complete the chain of exporting data from a database directly to client applications.
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.1</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-04-29">2017-04-29</time>
		</header>
		<aside>
			<p>
				Have the singleton search function (e.g., <q>search foo: name bar</q>) use the operator <q>get</q> in generated
				function names.
				Before, these would be (following the example) <code>db_foo_by_foo</code>.
				Now they're <code>db_foo_get_by_foo</code>.
				This is more consistent with the other search functions.
			</p>
			<p>
				Renamed the <b>-h</b> flag to <b>-C</b>.
				(Source in lowercase, header in uppercase.)
			</p>
		</aside>
	</article>
	<article data-sblg-article="1" data-sblg-tags="version">
		<header>
			<h3>0.1.0</h3>
			<address>Kristaps Dzonsons</address>
			<time datetime="2017-04-27">2017-04-27</time>
		</header>
		<aside>
			<p>
				Initial stable internals.
				I'm still going to change the generated API function names before adding features, but the system is already in
				use.
			</p>
		</aside>
	</article>
</articles>
